[{"C:\\hype-electron\\src\\index.js":"1","C:\\hype-electron\\src\\App.js":"2","C:\\hype-electron\\src\\reportWebVitals.js":"3","C:\\hype-electron\\src\\feathers.js":"4","C:\\hype-electron\\src\\frontpage.js":"5"},{"size":504,"mtime":1610766197789,"results":"6","hashOfConfig":"7"},{"size":924,"mtime":1610772104388,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":336,"mtime":1610766235760,"results":"10","hashOfConfig":"7"},{"size":4104,"mtime":1610775999677,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"nfy8hx",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\hype-electron\\src\\index.js",[],["25","26"],"C:\\hype-electron\\src\\App.js",["27"],"import React, { useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport client from \"./feathers\";\nimport Frontpage from \"./frontpage\";\n\nexport default function App() {\n  const [user, setUser] = React.useState(undefined);\n  useEffect(() => {\n    client.authenticate().catch(() => setUser(null));\n\n    client.on(\"authenticated\", (user) => {\n      setUser(user.user);\n    });\n\n    client.service(\"users\").on(\"patched\", (paramUser) => {\n      if (paramUser.id === user.id) {\n        setUser(paramUser);\n      }\n    });\n\n    client.on(\"logout\", () => {\n      setUser(null);\n      window.location.href = \"/\";\n    });\n\n    return;\n  }, [user]);\n\n  return (\n    <div className=\"hype-root\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <Frontpage {...props} user={user} />} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n","C:\\hype-electron\\src\\reportWebVitals.js",[],"C:\\hype-electron\\src\\feathers.js",[],"C:\\hype-electron\\src\\frontpage.js",["28"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Logo from \"./assets/logo.svg\";\r\n\r\nexport default function Frontpage(props) {\r\n  const classes = useStyles();\r\n  const [channel, setChannel] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    return;\r\n  }, []);\r\n\r\n  const login = () => {\r\n    window.location.href = `https://api.hype.lol/oauth/twitch`;\r\n  };\r\n\r\n  const handleChannelChange = (evt) => {\r\n    setChannel(evt.target.value);\r\n  }\r\n\r\n  const handleChannelSubmit = (e) => {\r\n    if (e.which === 13) {\r\n      if (channel.length > 0) {\r\n        window.location.href = `/${channel}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (props.user === undefined)\r\n    return (\r\n      <div className={classes.parent}>\r\n        <div>\r\n          <Loader type=\"Oval\" color=\"#00BFFF\" height={150} width={150} />\r\n          <h2 style={{ color: \"#fff\", marginTop: \"2rem\", fontSize: \"2rem\" }}>\r\n            Loading...\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (!props.user)\r\n    return (\r\n      <div className={classes.parent}>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <div>\r\n            <img alt=\"\" src={Logo} height=\"auto\" width=\"360px\" />\r\n          </div>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={login}\r\n            className={classes.connect}\r\n          >\r\n            <div\r\n              style={{ display: \"flex\", flexGrow: \"0\", alignItems: \"center\" }}\r\n            >\r\n              <svg\r\n                className={classes.twitchIcon}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"20\"\r\n                height=\"40\"\r\n                viewBox=\"0 0 17 20\"\r\n                fill=\"none\"\r\n              >\r\n                <path\r\n                  d=\"M3.54167 0L0 3.57143V16.4286H4.25V20L7.79167 16.4286H10.625L17 10V0H3.54167ZM15.5833 9.28571L12.75 12.1429H9.91667L7.4375 14.6429V12.1429H4.25V1.42857H15.5833V9.28571Z\"\r\n                  fill=\"white\"\r\n                />\r\n                <path\r\n                  d=\"M13.4584 3.92847H12.0417V8.21418H13.4584V3.92847Z\"\r\n                  fill=\"white\"\r\n                />\r\n                <path\r\n                  d=\"M9.56242 3.92847H8.14575V8.21418H9.56242V3.92847Z\"\r\n                  fill=\"white\"\r\n                />\r\n              </svg>\r\n              <div style={{ flexGrow: \"0\" }}>Connect</div>\r\n            </div>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className={classes.parent}>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <div>\r\n          <img alt=\"\" src={Logo} height=\"auto\" width=\"360px\" />\r\n        </div>\r\n        <Typography variant=\"h4\" className={classes.marginTop2}>\r\n          {`Welcome back ${props.user.display_name}!`}\r\n        </Typography>\r\n        <TextField\r\n          inputProps={{\r\n            style: { backgroundColor: \"hsla(0,0%,100%,.15)\", color: \"#fff\", textAlign: 'center' },\r\n          }}\r\n          InputLabelProps={{\r\n            style: { color: \"#fff\"},\r\n          }}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Enter a Twitch Channel\"\r\n          name=\"channel\"\r\n          autoComplete=\"off\"\r\n          autoCapitalize=\"off\"\r\n          autoCorrect=\"off\"\r\n          autoFocus\r\n          onChange={handleChannelChange}\r\n          onKeyPress={handleChannelSubmit}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  connect: {\r\n    backgroundColor: \"rgb(145, 70, 255)\",\r\n    color: `#fff`,\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(145, 70, 255)\",\r\n      opacity: \"0.7\",\r\n    },\r\n    whiteSpace: \"nowrap\",\r\n    textTransform: \"none\",\r\n    borderRadius: \"1rem\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  parent: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n  },\r\n  twitchIcon: {\r\n    marginRight: \"0.5rem\",\r\n  },\r\n  marginTop2: {\r\n    marginTop: \"2rem\",\r\n  },\r\n}));\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":40,"nodeType":"35","messageId":"36","endLine":2,"endColumn":48},{"ruleId":"33","severity":1,"message":"37","line":8,"column":8,"nodeType":"35","messageId":"36","endLine":8,"endColumn":17},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'SimpleBar' is defined but never used.","no-global-assign","no-unsafe-negation"]